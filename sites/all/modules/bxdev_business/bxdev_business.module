<?php

module_load_include('inc', 'bxdev_business', 'bxdev_business.forms');

/**
 * HOOKS
 */

/**
 * Implements hook_menu().
 */
function bxdev_business_menu() {
  $items['business/%node/public/%'] = array(
    'page callback' => 'bxdev_business_public_callback',
		'page arguments' => array(1, 3),
    'access arguments' => array('pc'),
    'type' => MENU_CALLBACK,
  );

	$items['business/%node/video/%'] = array(
	  'page callback' => 'bxdev_business_video_callback',
		'page arguments' => array(1, 3),
	  'access arguments' => array('pc'),
	  'type' => MENU_CALLBACK,
	);
	
	$items['sales/add/business'] = array(
    'title' => t('Create a New Video Project'),
		'page callback' => 'bxdev_business_create_business_page',
		'page arguments' => array(3),
		'file path' => drupal_get_path('module','node'),
    'file' => 'node.pages.inc',
    'access arguments' => array('add new project'),
    'type' => MENU_CALLBACK,
  );
  
	$items['sales/autocomplete/businesses'] = array(
		'page callback' => 'bxdev_business_autocomplete_businesses',
	  'access arguments' => array('add new project'),
		'type' => MENU_CALLBACK,
	);

  return $items;
}

/**
 * Implements hook_preprocess_node().
 */
function bxdev_business_preprocess_node(&$variables) {
	if($variables['node']->type == 'business'){
		// navigation controls
		$navigation = '<a href="/clients" class="back">&lt; Back to Local Directory</a>';
		if(user_access('pc')){
			$navigation .= ' <a href="/projects/master" class="back">&lt; Back to master list</a>';
		}
		$variables['navigation'] = $navigation;
	  // if user is sales or pc, allow edit / delete
		if(user_access('sales') || user_access('pc')){
			$operations = '<div class="edit"><a href="/node/' . $variables['node']->nid . '/edit">Edit</a></div>';
			$operations .= '<div class="delete"><a href="/node/' . $variables['node']->nid . '/delete">Delete</a></div>';
			$variables['operations'] = $operations;
		}
		// if user is pc, allow project select
		if(user_access('pc')){
			$client_projects = '<div class="block client-projects">';
			$client_projects .= '<h2>Business Projects:</h2>';
			$client_projects .= views_embed_view('projects', 'block_3');
			$client_projects .= '</div>';
			$variables['client_projects'] = $client_projects;
		}
		// if profile video is assigned
		if(!empty($variables['field_profile_video_ref'])){
			$video_output = '';
			// load the project node object
			$project_node = node_load($variables['field_profile_video_ref'][0]['nid']);
			// load the renderable array
			$project = node_view($project_node);
			// get approved photos
			$project_obj = new Project($project_node->nid);
			$approved_photos = $project_obj->get_approved_photos();
			
			// begin video / images markup
			$video_output .= '<div class="video-wrap-outer"><div class="video-wrap-inner">';
			// add the video
			if(!empty($project['field_project_video'][0]['file'])){
				$video_output .= theme('media_vimeo_video', $project['field_project_video'][0]['file']);
			}
			
			$video_output .= '</div></div>';
			
			// load the renderable teaser array
			$teaser = field_attach_view('node', $project_node, 'teaser');
			
			// begin thumbnail markup
			$video_output .= '<div class="video-thumbs-wrap clearfix">';
			// add the video thumb		
			if(!empty($teaser['field_project_video'])){	
				$video_output .= render($teaser['field_project_video']);		
			}		
			// add the photo thumbs
			$video_output .= '<div class="photo-thumbs-wrap-outer clearfix"><div class="field-label">Images:</div>';
			$video_output .= '<div class="photo-thumbs-wrap-inner clearfix">';
			if(!empty($approved_photos)){
				foreach($teaser['field_project_photos'] as $key => $value){
					if(is_numeric($key)){
						if(in_array($value['#item']['fid'], $approved_photos)){
							$video_output .= '<div class="slide"><a rel="shadowbox[images]" href="' . image_style_url('approval', $value['#item']['uri']) . '">' . theme($value['#theme'], $value) . '</a></div>';
						}
					}
				}
			}
			$video_output .= '</div></div></div>';
			
			$variables['video'] = $video_output;
		}
	}
}

/**
 * Implements hook_block_info().
 */
function bxdev_business_block_info() {
  $blocks = array();
	$blocks['client_sort']['info'] = t('Business sort');
	return $blocks;
}

/**
 * Implements hook_block_view().
 */
function bxdev_business_block_view($delta = '') {
  switch($delta){
  	case 'client_sort':
  		$output = '';
			$query = $_SERVER['REQUEST_URI'];
			$symbol = (strpos($query, '?') > 0) ? '&' : '?';
			if(($pos = strpos($query, '&sort_by=')) > 0){
				$query = substr($query, 0, $pos);
			}

			$output .= 'Sort by: ';
			$output .= '<a href="' . $query . $symbol . 'sort_by=field_client_rating_value&sort_order=DESC">Rating</a> | ';
			$output .= '<a href="' . $query . $symbol . 'sort_by=title&sort_order=ASC">ABC</a>';
  		break;
  }
	$block['content'] = $output;
	return $block;
}


/**
 * CUSTOM
 */

/**
 * Page callback: add business
 */
function bxdev_business_create_business_page(){	
	drupal_add_js(drupal_get_path('module', 'bxdev_business') . '/bxdev_business.js');
	
	// check if client uid is present
	$arg3 = arg(3);
	
	$output = !empty($arg3) ? '<h2><strong>Business Profile Info</strong> (step 2 of 3)</h2>' : '<h2><strong>Business Profile Info</strong> (step 1 of 2)</h2>';
	$output .= '<div class="client-select">';
	$output .= '<a href="#new" class="show-client-add-form">New business</a>';
	$output .= '<a href="#existing" class="show-client-existing-form">Existing business</a>';
	$output .= '</div>';
	
	$output .= '<div class="client-add-form">' . drupal_render(node_add('business')) . '</div>';
	
	$output .= '<div class="client-existing-form" style="display:none;">' . drupal_render(drupal_get_form('bxdev_business_existing_business_form')) . '</div>';
	
	return $output;	
}

/**
 * Page callback: business public
 */
function bxdev_business_public_callback($node, $value){
	$node->field_public_access['und'][0]['value'] = $value;
	node_save($node);
	drupal_set_message('Public access has been updated for ' . $node->title);
	drupal_goto('projects/master');
}

/**
 * Page callback: business video
 */
function bxdev_business_video_callback($business, $project_nid){
	$business->field_profile_video_ref['und'][0]['nid'] = $project_nid;
	node_save($business);
	drupal_set_message('New profile video has been assigned.');
	drupal_goto('node/' . $business->nid);
}


/**
 * Menu callback: clients autocomplete
 */
function bxdev_business_autocomplete_businesses(){
	$arg1 = arg(3);
	$arg2 = arg(4);
	if(!empty($arg2)){
		$results = db_query("SELECT n.nid, n.title FROM {node} n INNER JOIN {field_data_field_client_ref} c ON n.nid = c.entity_id WHERE c.field_client_ref_uid = :uid AND n.type = 'business' AND n.title LIKE :string", array(':string' => $arg2 . '%', ':uid' => $arg1));
	}else{		
		$results = db_query("SELECT nid, title FROM {node} WHERE type = 'business' AND title LIKE :string", array(':string' => $arg1 . '%'));
	}
	if($results->rowCount() > 0){
		$items = array();
		foreach($results as $business){
			$items[$business->nid] = $business->title;
		}
		drupal_json_output($items);
	}
}












