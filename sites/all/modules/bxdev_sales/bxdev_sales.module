<?php

/**
 * HOOKS
 */

/**
 * Implements hook_menu().
 */
function bxdev_sales_menu() {
  $items['sales/add/business'] = array(
    'title' => t('Create a New Video Project'),
		'page callback' => 'bxdev_sales_create_business_page',
		'file path' => drupal_get_path('module','node'),
    'file' => 'node.pages.inc',
    'access arguments' => array('sales'),
    'type' => MENU_CALLBACK,
  );

	$items['sales/add/project/%node'] = array(
	  'title' => t('Create a New Video Project'),
		'page callback' => 'bxdev_sales_create_project_page',
		'page arguments' => array(3),
		'file path' => drupal_get_path('module','node'),
    'file' => 'node.pages.inc',
	  'access arguments' => array('sales'),
	  'type' => MENU_CALLBACK,
	);

	$items['sales/get/form/%'] = array(
		'page callback' => 'bxdev_sales_get_form',
		'page arguments' => array(3),
		'file path' => drupal_get_path('module','user'),
    'file' => 'user.pages.inc',
    'access arguments' => array('sales'),
		'type' => MENU_CALLBACK,
	);

	$items['sales/autocomplete/businesses'] = array(
		'page callback' => 'bxdev_sales_autocomplete_businesses',
	  'access arguments' => array('sales'),
		'type' => MENU_CALLBACK,
	);

  return $items;
}

/**
 * Implements hook_node_insert().
 */
function bxdev_sales_node_presave($node) {
  switch($node->type){			
		case 'business':
			// get email
			$email = $node->field_email['und'][0]['email'];
			// load the user
			$account = user_load_by_name($email);
			// if the user exists
			if(!$account){
				$full_name = $node->field_email['und'][0]['email'];
				// create a new client
				$user = new User();
				$user->set_email($email);
				$user->set_role('client');
				$user->create();
				$account = $user->get_user();
				// log action
				watchdog('lightswitch', 'New client: @name, uid: @uid', array('@name' => $account->name, '@uid' => $account->uid));
			}
			$node->field_client_ref['und'][0]['uid'] = $account->uid;
			// log action
			watchdog('lightswitch', 'New business: @title, nid: @nid', array('@title' => $node->title, '@nid' => $node->nid));
			break;
	}
}


/**
 * FORMS
 */

/**
 * Form builder: existing client
 */
function bxdev_sales_existing_business_form($form, $form_state){
	$form['existing_business'] = array(
		'#type' => 'textfield',
		'#title' => t('Existing business'),
		'#autocomplete_path' => 'sales/autocomplete/businesses',
		'#required' => TRUE,
	);
	
	$form['existing_business_nid'] = array(
	  '#type' => 'hidden',
	  '#default_value' => '',
	);	
	
	$form['submit'] = array(
	  '#type' => 'submit',
	  '#value' => t('Continue'),
	);
	
	return $form;	
}

/**
 * Implements hook_form_FORM_ID_alter().
 * Form: bxdev sales existing client form
 */
function bxdev_sales_form_bxdev_sales_existing_business_form_alter(&$form, $form_state){
	$form['#action'] = '/sales/add/business#existing';
}

/**
 * Implements hook_form_FORM_ID_alter().
 * Form: project node form
 */
function bxdev_sales_form_project_node_form_alter(&$form, $form_state){	
	// do not modify on admin side
	if(arg(0) != 'node' && !is_numeric(arg(1))){
		
		// set the user reference uid
		$nid = arg(3);
		$form['field_project_business_ref']['und']['#default_value'] = $nid;
	
		// override original submit button
		$form['actions']['submit']['#value'] = t('Submit & View Profile');
	
		// add additional submit button
		$form['actions']['return'] = array(
			'#type' => 'submit',
			'#value' => t('Submit & Return to Form'),
			'#submit' => array('node_form_submit', 'bxdev_sales_project_node_form_submit'),
		);
		
		// add left / right markup
		$form['field_project_business_ref']['#prefix'] = '<div class="left">';
		$form['field_script_notes']['#suffix'] = '</div><div class="right">';
		$form['field_unique']['#suffix'] = '</div>';		
	}
}

/**
 * Implements hook_form_FORM_ID_alter().
 * Form: business node form
 */
function bxdev_sales_form_business_node_form_alter(&$form, $form_state){
	$form['#attributes']['class'][] = 'clearfix';
	$form['actions']['submit']['#submit'][] = 'bxdev_sales_form_business_node_form_submit';
	$form['actions']['submit']['#value'] = t('Continue');
	$form['title']['#prefix'] = '<div class="left">';
	$form['field_hours_operation']['#suffix'] = '</div><div class="right">';
	$form['field_business_download_file']['#suffix'] = '</div>';
	
	// remove labels and set input values for social media inputs
	$form['field_social_name1']['und'][0]['value']['#title'] = t('Social Media');
	$form['field_social_name2']['und'][0]['value']['#title'] = '';
	$form['field_social_name3']['und'][0]['value']['#title'] = '';
	$form['field_social_name4']['und'][0]['value']['#title'] = '';
	$form['field_social_name1']['und'][0]['value']['#default_value'] = t('site name');
	$form['field_social_name2']['und'][0]['value']['#default_value'] = t('site name');
	$form['field_social_name3']['und'][0]['value']['#default_value'] = t('site name');
	$form['field_social_name4']['und'][0]['value']['#default_value'] = t('site name');
	$form['field_social_url1']['und'][0]['value']['#title'] =  '';
	$form['field_social_url2']['und'][0]['value']['#title'] =  '';
	$form['field_social_url3']['und'][0]['value']['#title'] =  '';
	$form['field_social_url4']['und'][0]['value']['#title'] =  '';
	$form['field_social_url1']['und'][0]['value']['#default_value'] =  t('url');
	$form['field_social_url2']['und'][0]['value']['#default_value'] =  t('url');
	$form['field_social_url3']['und'][0]['value']['#default_value'] =  t('url');
	$form['field_social_url4']['und'][0]['value']['#default_value'] =  t('url');
}

/**
 * Form submit handler: existing client
 */
function bxdev_sales_existing_business_form_submit($form, &$form_state){
	$values = $form_state['values'];
	// redirect to the add project page
	$form_state['redirect'] = 'sales/add/project/' . $values['existing_business_nid'];
}

/**
 * Form submit handler: add project
 */
function bxdev_sales_project_node_form_submit($form, &$form_state){
	// send to client add form if "return to form" button was clicked
	if($form_state['clicked_button']['#value'] == '< Submit & Return to Form'){
		$form_state['redirect'] = 'sales/add/business';
	}
}

/**
 * Form submit handler: add business
 */
function bxdev_sales_form_business_node_form_submit($form, &$form_state){
	// only if adding new business, not editing
	if(arg(2) != 'edit'){
		$values = $form_state['values'];
		$form_state['redirect'] = 'sales/add/project/' . $values['nid'];
	}
}


/**
 * CUSTOM
 */

/**
 * Page callback: create client
 */
function bxdev_sales_create_business_page(){	
	drupal_add_js(drupal_get_path('module', 'bxdev_sales') . '/bxdev_sales.js');
	
	$output = '<h2><strong>Business Profile Info</strong> (step 1 of 2)</h2>';
	$output .= '<div class="client-select">';
	$output .= '<a href="#new" class="show-client-add-form">New business</a>';
	$output .= '<a href="#existing" class="show-client-existing-form">Existing business</a>';
	$output .= '</div>';
	
	$output .= '<div class="client-add-form">' . drupal_render(node_add('business')) . '</div>';
	
	$output .= '<div class="client-existing-form" style="display:none;">' . drupal_render(drupal_get_form('bxdev_sales_existing_business_form')) . '</div>';
	
	return $output;	
}

/**
 * Page callback: create project
 */
function bxdev_sales_create_project_page($user){
	$output = '<h2><strong>Project Info</strong> (step 2 of 2)</h2>';
	$output .= drupal_render(node_add('project'));

	return $output;
}

/**
 * Menu callback: clients autocomplete
 */
function bxdev_sales_autocomplete_businesses($string){
	$results = db_query("SELECT nid, title FROM {node} WHERE type = 'business' AND title LIKE :string", array(':string' => $string . '%'));
	if($results->rowCount() > 0){
		$items = array();
		foreach($results as $business){
			$items[$business->nid] = $business->title;
		}
		drupal_json_output($items);
	}
}






